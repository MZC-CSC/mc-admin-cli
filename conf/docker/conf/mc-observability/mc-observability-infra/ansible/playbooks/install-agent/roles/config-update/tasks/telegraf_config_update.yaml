- name: Create temporary telegraf config content
  copy:
    content: "{{ config_content | b64decode }}"
    dest: "/tmp/new_telegraf_config_{{ request_id }}"
    mode: "0644"
  delegate_to: 127.0.0.1

- name: Get current telegraf config file hash
  become: true
  become_method: sudo
  become_user: root
  vars:
    ansible_connection: ssh
    ansible_host: "{{ target_host }}"
    ansible_port: "{{ target_port }}"
    ansible_user: "{{ target_user }}"
    ansible_ssh_private_key_file: "{{ target_sshkey_path }}"
  raw: "md5sum {{ telegraf_config_path }} | awk '{print $1}'"
  register: current_telegraf_config_hash
  ignore_errors: true

- name: Get new telegraf config file hash
  raw: "md5sum /tmp/new_telegraf_config_{{ request_id }} | awk '{print $1}'"
  delegate_to: 127.0.0.1
  register: new_telegraf_config_hash

- name: Set telegraf config update required flag
  set_fact:
    update_required: "{{ current_telegraf_config_hash.rc != 0 or current_telegraf_config_hash.stdout | trim != new_telegraf_config_hash.stdout | trim }}"

- name: Display telegraf config update status
  debug:
    msg: "Configuration update is {{ 'required' if update_required else 'not required' }}"

- name: Get telegraf config directory path
  become: true
  become_method: sudo
  become_user: root
  vars:
    ansible_connection: ssh
    ansible_host: "{{ target_host }}"
    ansible_port: "{{ target_port }}"
    ansible_user: "{{ target_user }}"
    ansible_ssh_private_key_file: "{{ target_sshkey_path }}"
  set_fact:
    config_directory_path: "{{ telegraf_config_path | dirname }}"
  when: update_required

- name: Create telegraf config directory if not exist
  become: true
  become_method: sudo
  become_user: root
  vars:
    ansible_connection: ssh
    ansible_host: "{{ target_host }}"
    ansible_port: "{{ target_port }}"
    ansible_user: "{{ target_user }}"
    ansible_ssh_private_key_file: "{{ target_sshkey_path }}"
  raw: "mkdir -p {{ config_directory_path }}"
  when: update_required

- name: Copy new telegraf config to target
  include_tasks: send_file.yaml
  vars:
    input_file_path: "/tmp/new_telegraf_config_{{ request_id }}"
    output_file_path: "{{ telegraf_config_path }}"
    output_file_owner: "root"
    output_file_group: "root"
    output_file_chmod: "644"
  when: update_required

- name: Restart CMP Telegraf service
  become: true
  become_method: sudo
  become_user: root
  vars:
    ansible_connection: ssh
    ansible_host: "{{ target_host }}"
    ansible_port: "{{ target_port }}"
    ansible_user: "{{ target_user }}"
    ansible_ssh_private_key_file: "{{ target_sshkey_path }}"
  shell: "systemctl restart cmp-telegraf-{{ site_code }}"
  when: update_required

- name: Run CMP Telegraf status command
  become: true
  become_method: sudo
  become_user: root
  vars:
    ansible_connection: ssh
    ansible_host: "{{ target_host }}"
    ansible_port: "{{ target_port }}"
    ansible_user: "{{ target_user }}"
    ansible_ssh_private_key_file: "{{ target_sshkey_path }}"
  raw: "systemctl status --no-pager cmp-telegraf-{{ site_code }}"
  register: cmp_telegraf_status
  failed_when: cmp_telegraf_status.rc not in [0, 3]
  when: update_required

- name: Display CMP Telegraf status
  debug:
    var: cmp_telegraf_status

- name: Cleanup temporary telegraf config file
  file:
    path: "/tmp/new_telegraf_config_{{ request_id }}"
    state: absent
  delegate_to: 127.0.0.1
